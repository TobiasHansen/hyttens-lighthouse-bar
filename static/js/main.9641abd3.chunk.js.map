{"version":3,"sources":["components/drinks.tsx","App.tsx","firebaseConfig.ts","reportWebVitals.ts","index.tsx"],"names":["DrinkList","title","data","style","marginTop","Title","level","itemLayout","dataSource","filter","drink","inactive","maxWidth","grid","gutter","xs","sm","md","lg","xl","xxl","renderItem","item","display","width","marginLeft","marginRight","alignContent","name","Paragraph","description","src","process","image","alt","height","borderRadius","Firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","beersRef","firestore","collection","drinksRef","shotsRef","App","useState","beers","setBeers","shots","setShots","drinks","setDrinks","useEffect","get","then","result","tempShots","forEach","shot","push","tempBeers","beer","tempDrinks","console","log","className","underline","marginBottom","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9641abd3.chunk.js","sourcesContent":["import {Drink} from \"../App\";\nimport {List, Typography} from \"antd\";\nimport Title from \"antd/es/typography/Title\";\nimport Paragraph from \"antd/es/typography/Paragraph\";\n\nexport const DrinkList = ({title, data}: { title: string, data: Drink[] }) => (\n    <div style={{marginTop: \"10px\"}}>\n        <Title level={2}>{title}</Title>\n        <List\n            itemLayout=\"vertical\"\n            dataSource={\n                data.filter(drink => drink.inactive !== true)\n            }\n            style={{maxWidth: \"1200px\"}}\n            grid={{\n                gutter: 16,\n                xs: 1,\n                sm: 2,\n                md: 2,\n                lg: 2,\n                xl: 2,\n                xxl: 2,\n            }}\n            renderItem={item => (\n                <div style={{\n                    display: \"flex\",\n                    width: \"95%\",\n                    marginTop: \"5px\",\n                    marginLeft: \"10px\",\n                    marginRight: \"10px\",\n                    alignContent: \"space-between\"\n                }}>\n                    <Typography style={{width: \"100%\"}}>\n                        <Title level={3}>{item.name}</Title>\n                        <Paragraph>{item.description}</Paragraph>\n                    </Typography>\n                    <img\n                        src={process.env.PUBLIC_URL + '/images/' + item.image}\n                        alt={item.name + \" drink\"}\n                        height={100}\n                        style={{\n                            borderRadius: \"10px\"\n                        }}\n                    />\n                </div>\n            )}\n        />\n    </div>\n)","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {DrinkList} from \"./components/drinks\";\nimport {Divider} from \"antd\";\nimport Firebase from \"firebase\";\nimport {firebaseConfig} from \"./firebaseConfig\";\nimport Title from \"antd/es/typography/Title\";\n\nif (!Firebase.apps.length) {\n    Firebase.initializeApp(firebaseConfig);\n} else {\n    Firebase.app(); // if already initialized, use that one\n}\n\nconst beersRef = Firebase.firestore()\n    .collection(\"/beers\")\nconst drinksRef = Firebase.firestore()\n    .collection(\"/drinks\")\nconst shotsRef = Firebase.firestore()\n    .collection(\"/shots\")\n\nexport interface Drink {\n    id: string;\n    type: string;\n\n    name: string;\n    description?: string;\n    image: string;\n    inactive?: boolean;\n    border?: boolean;\n}\n\nfunction App() {\n    const [beers, setBeers] = useState<Drink[]>([])\n    const [shots, setShots] = useState<Drink[]>([])\n    const [drinks, setDrinks] = useState<Drink[]>([])\n\n    useEffect(() => {\n        shotsRef.get().then(result => {\n            const tempShots: Drink[] = []\n            result.forEach(shot => tempShots.push(shot.data() as Drink))\n            setShots(tempShots)\n        })\n        beersRef.get().then(result => {\n            const tempBeers: Drink[] = []\n            result.forEach(beer => tempBeers.push(beer.data() as Drink))\n            setBeers(tempBeers)\n        })\n        drinksRef.get().then(result => {\n            const tempDrinks: Drink[] = []\n            result.forEach(shot => tempDrinks.push(shot.data() as Drink))\n            setDrinks(tempDrinks)\n        })\n    }, [])\n    console.log(drinks)\n\n    return (\n        <div className=\"App\">\n            <Title underline style={{marginTop: \"5px\"}}>\n                <img\n                    src={process.env.PUBLIC_URL + '/images/lighthouse.jpeg'}\n                    alt=\"Lighthouse\"\n                    height={40}\n                    style={{marginBottom: \"8px\"}}\n                />\n                Lighthouse Bar\n                <img\n                    src={process.env.PUBLIC_URL + '/images/lighthouse.jpeg'}\n                    alt=\"Lighthouse\"\n                    height={40}\n                    style={{marginBottom: \"8px\"}}\n                />\n            </Title>\n            <div style={{maxWidth: \"800px\"}}>\n                <DrinkList title=\"Drinks\" data={drinks}/>\n                <Divider/>\n                <DrinkList title=\"Shots\" data={shots}/>\n                <Divider/>\n                <DrinkList title=\"Ã˜l\" data={beers}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","export const firebaseConfig = {\n    apiKey: \"AIzaSyAJcmyQvVNQat9P-4t3ZgaeSubZ3OThAUw\",\n    authDomain: \"hyttens-lighthouse-bar.firebaseapp.com\",\n    projectId: \"hyttens-lighthouse-bar\",\n    storageBucket: \"hyttens-lighthouse-bar.appspot.com\",\n    messagingSenderId: \"725604910366\",\n    appId: \"1:725604910366:web:f97d70d09a63669fed350f\"\n};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}