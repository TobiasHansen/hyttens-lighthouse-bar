{"version":3,"sources":["data/drinks.ts","components/drinks.tsx","data/shots.ts","data/beers.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["drinks","name","description","image","DrinkList","title","data","style","marginTop","Title","level","itemLayout","dataSource","filter","drink","inactive","maxWidth","grid","gutter","xs","sm","md","lg","xl","xxl","renderItem","item","display","width","marginLeft","marginRight","alignContent","Paragraph","src","process","alt","height","shots","beers","App","className","underline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAEaA,G,cAAkB,CAC3B,CACIC,KAAM,YACNC,YAAa,0DACbC,MAAO,sBAEX,CACIF,KAAM,cACNC,YAAa,iDACbC,MAAO,sBAEX,CACIF,KAAM,mBACNC,YAAa,mCACbC,MAAO,sBAEX,CACIF,KAAM,WACNC,YAAa,iDACbC,MAAO,sBAEX,CACIF,KAAM,sBACNC,YAAa,mDACbC,MAAO,sBAEX,CACIF,KAAM,iBACNC,YAAa,mDACbC,MAAO,sBAEX,CACIF,KAAM,YACNC,YAAa,uDACbC,MAAO,wB,0CC/BFC,EAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,KAAT,OACrB,sBAAKC,MAAO,CAACC,UAAW,QAAxB,UACI,cAACC,EAAA,EAAD,CAAOC,MAAO,EAAd,SAAkBL,IAClB,cAAC,IAAD,CACIM,WAAW,WACXC,WACIN,EAAKO,QAAO,SAAAC,GAAK,OAAuB,IAAnBA,EAAMC,YAE/BR,MAAO,CAACS,SAAU,UAClBC,KAAM,CACFC,OAAQ,GACRC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,IAAK,GAETC,WAAY,SAAAC,GAAI,OACZ,sBAAKnB,MAAO,CAACoB,QAAS,OAAQC,MAAO,MAAOC,WAAY,OAAQC,YAAa,OAAQC,aAAc,iBAAnG,UACI,eAAC,IAAD,CAAYxB,MAAO,CAACqB,MAAO,QAA3B,UACI,cAACnB,EAAA,EAAD,CAAOC,MAAO,EAAd,SAAkBgB,EAAKzB,OACvB,cAAC+B,EAAA,EAAD,UAAYN,EAAKxB,iBAErB,qBACI+B,IAAKC,kCAAsCR,EAAKvB,MAChDgC,IAAKT,EAAKzB,KAAO,SACjBmC,OAAQ,gBC9BnBC,EAAiB,CAC1B,CACIpC,KAAM,wBACNC,YAAa,6BACbC,MAAO,oBAEX,CACIF,KAAM,0BACNC,YAAa,oCACbC,MAAO,qBCTFmC,EAAiB,CAC1B,CACIrC,KAAM,qBACNC,YAAa,kKACbC,MAAO,wBAEX,CACIF,KAAM,oBACNC,YAAa,2NACbC,MAAO,0BAEX,CACIF,KAAM,aACNC,YAAa,6KACbC,MAAO,oB,SCeAoC,MAff,WACI,OACI,sBAAKC,UAAU,MAAf,UACI,cAAC/B,EAAA,EAAD,CAAOgC,WAAS,EAAhB,qCACA,sBAAKlC,MAAO,CAACS,SAAU,SAAvB,UACI,cAAC,EAAD,CAAWX,MAAM,SAASC,KAAMN,IAChC,cAAC,IAAD,IACA,cAAC,EAAD,CAAWK,MAAM,QAAQC,KAAM+B,IAC/B,cAAC,IAAD,IACA,cAAC,EAAD,CAAWhC,MAAM,QAAKC,KAAMgC,WCX7BI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.48469140.chunk.js","sourcesContent":["import {Drink} from \"../App\";\n\nexport const drinks: Drink[] = [\n    {\n        name: \"Sabeltann\",\n        description: \"Fireball, Captain Morgan, Limejuice, Simple sirup, Cola\",\n        image: \"drink-default.jpeg\"\n    },\n    {\n        name: \"Blue Lagoon\",\n        description: \"Blue Curacao, Russian Platinum Vodka, Lemonade\",\n        image: \"drink-default.jpeg\"\n    },\n    {\n        name: \"Grønn stær\",\n        description: \"Malibu, Midori, Urge, lime juice\",\n        image: \"drink-default.jpeg\"\n    },\n    {\n        name: \"Eplekake\",\n        description: \"Fireball, Apple Sour, Simple sirup, lime juice\",\n        image: \"drink-default.jpeg\"\n    },\n    {\n        name: \"Strawberry Daiquiri\",\n        description: \"Bacardi Superior, Jordbær, Lime Juice, Sukker\",\n        image: \"drink-default.jpeg\"\n    },\n    {\n        name: \"Sure føtter\",\n        description: \"Vodka, Jägermeister, Midori, Lime Juice, Cola\",\n        image: \"drink-default.jpeg\"\n    },\n    {\n        name: \"East Side\",\n        description: \"Harahorn Gin, Agurk, Mynte, Lime juice, Simple sirup\",\n        image: \"drink-default.jpeg\"\n    },\n]\n","import {Drink} from \"../App\";\nimport {List, Typography} from \"antd\";\nimport Title from \"antd/es/typography/Title\";\nimport Paragraph from \"antd/es/typography/Paragraph\";\n\nexport const DrinkList = ({title, data}: { title: string,  data: Drink[] }) => (\n    <div style={{marginTop: \"10px\"}}>\n        <Title level={2}>{title}</Title>\n        <List\n            itemLayout=\"vertical\"\n            dataSource={\n                data.filter(drink => drink.inactive !== true)\n            }\n            style={{maxWidth: \"1200px\"}}\n            grid={{\n                gutter: 16,\n                xs: 1,\n                sm: 2,\n                md: 2,\n                lg: 2,\n                xl: 2,\n                xxl: 2,\n            }}\n            renderItem={item => (\n                <div style={{display: \"flex\", width: \"95%\", marginLeft: \"10px\", marginRight: \"10px\", alignContent: \"space-between\"}}>\n                    <Typography style={{width: \"100%\"}}>\n                        <Title level={3}>{item.name}</Title>\n                        <Paragraph>{item.description}</Paragraph>\n                    </Typography>\n                    <img\n                        src={process.env.PUBLIC_URL + '/images/' + item.image}\n                        alt={item.name + \" drink\"}\n                        height={100}\n                    />\n                </div>\n            )}\n        />\n    </div>\n)","import {Drink} from \"../App\";\n\nexport const shots: Drink[] = [\n    {\n        name: \"Fizzy Pop Shot - Rosa\",\n        description: \"Bubblizz, Russian Platinum\",\n        image: \"shot-default.png\"\n    },\n    {\n        name: \"Fizzy Pop Shot - Blå\",\n        description: \"Bubblizz, Vodka, Russian Platinum\",\n        image: \"shot-default.png\"\n    },\n]\n","import {Drink} from \"../App\";\n\nexport const beers: Drink[] = [\n    {\n        name: \"Isbjørn pilsner\",\n        description: \"På tap. Isbjørn er en lys og leskende pilsner. Ølet har mer humlearoma enn de fleste nordiske pilsnertypene. noe som gir en fin bitterhet og friskhet.\",\n        image: \"isbjorn-pilsner.jpeg\"\n    },\n    {\n        name: \"Carlsberg Pilsner\",\n        description: \"På boks. Ølet har en lys strågul farge. Aromaen er preget av en lett gjærfruktighet med toner av eple, og høy og hasselnøtt fra malt. Smaken er ren og balansert, med lett maltsødme og bitterhet. \",\n        image: \"carlsberg-pilsner.jpeg\"\n    },\n    {\n        name: \"Aass Bayer\",\n        description: \"På boks. Aass Bayer er et nøttebrunt øl med søtlig og røstet aroma av korn og malt. Ølet har en fyldig smak med moderat sødme og balansert bitterhet.\",\n        image: \"aass-bayer.jpeg\",\n    },\n]\n","import React from 'react';\nimport './App.css';\nimport {drinks} from \"./data/drinks\";\nimport Title from \"antd/es/typography/Title\";\nimport {DrinkList} from \"./components/drinks\";\nimport {shots} from \"./data/shots\";\nimport {beers} from \"./data/beers\";\nimport {Divider} from \"antd\";\n\nexport interface Drink {\n    name: string;\n    description?: string;\n    image: string;\n    inactive?: boolean;\n}\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Title underline>Hytten`s Lighthouse Bar</Title>\n            <div style={{maxWidth: \"800px\"}}>\n                <DrinkList title=\"Drinks\" data={drinks}/>\n                <Divider/>\n                <DrinkList title=\"Shots\" data={shots}/>\n                <Divider/>\n                <DrinkList title=\"Øl\" data={beers}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}